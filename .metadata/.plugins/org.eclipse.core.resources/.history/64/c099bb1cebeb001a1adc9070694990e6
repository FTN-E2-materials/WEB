package services;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.google.gson.JsonSyntaxException;

import beans.Apartment;
import beans.ApartmentComment;
import beans.Grade;
import beans.Guest;
import beans.Reservation;
import dao.ApartmentDao;
import dao.UsersDao;
import dto.ApartmentDTO;
import dto.CommentDTO;
import dto.ReservationDTO;

public class ApartmentService {

	private ApartmentDao apartmentDao;
	private UsersDao userDao;
	
	public ApartmentService(ApartmentDao apartmentDao, UsersDao userDao) {
		this.apartmentDao = apartmentDao;
		this.userDao = userDao;
	}
	
	public Apartment saveNewApartment(ApartmentDTO apartmentParameters) throws JsonSyntaxException, IOException {
		int nextID = apartmentDao.generateNextID();
		
		Apartment newApartment = new Apartment(apartmentParameters.getApartmentTitle(), apartmentParameters.getType(), apartmentParameters.getNumberOfRooms(), 
				apartmentParameters.getNumberOfGuests(), apartmentParameters.getLocation(), new ArrayList<ApartmentComment>(), 
				apartmentParameters.getCostForNight(), true, apartmentParameters.getCheckInTime(), apartmentParameters.getCheckOutTime(), apartmentParameters.getApartmentPictures());
		newApartment.setID(nextID);
		apartmentDao.save(newApartment);
		return newApartment;
	}
	
	public List<Apartment> getActive() throws JsonSyntaxException, IOException {
		ArrayList<Apartment> apartments = (ArrayList<Apartment>) apartmentDao.getAll();
		ArrayList<Apartment> activeApartments = new ArrayList<Apartment>();
		for (Apartment a : apartments) {
			if (a.isActive()) {
				activeApartments.add(a);
			}
			
		}
		
		return activeApartments;
	}
	
	public Apartment getApartmentById(String id) throws JsonSyntaxException, IOException {
		return apartmentDao.getByID(Integer.parseInt(id));
	}
	
	public boolean checkIfReservedForDate(Date wantedDate) {
		return false;
	}
	
	public List<Apartment> getAllApartments() throws JsonSyntaxException, IOException {
		return apartmentDao.getAll();
	}
	
	public List<Apartment> getNewestApartments() throws JsonSyntaxException, IOException {
		return apartmentDao.getAll();
	}
	
	public List<Apartment> getMostPopularApartments() throws JsonSyntaxException, IOException {
		return apartmentDao.getAll();
	}
	
	public boolean reserveApartment(ReservationDTO reservation) {
		return false;
	}
	
	public void cancelReservation(Reservation reservation) {
	}
	
	public Apartment addComment(CommentDTO commentDTO) throws JsonSyntaxException, NumberFormatException, IOException {
		Apartment apartmentToComment = apartmentDao.getByID(Integer.parseInt(commentDTO.getApartment()));
		ApartmentComment comment = new ApartmentComment();
		if (commentDTO.getGrade().equals("Odlican")) {
			comment.setGrade(Grade.Excellent);
		} else if (commentDTO.getGrade().equals("Vrlo dobar")) {
			comment.setGrade(Grade.VeryGood);
		} else if (commentDTO.getGrade().equals("Dobar")) {
			comment.setGrade(Grade.Good);
		} else if (commentDTO.getGrade().equals("Dovoljan")) {
			comment.setGrade(Grade.Poor);
		} else {
			comment.setGrade(Grade.VeryPoor);
		}
		comment.setApartment(apartmentToComment.getID());
		comment.setGuest((Guest) userDao.getByID(commentDTO.getUsername()));
		
		return null;
	}
	
	public boolean disableComments(Apartment apartment) {
		return false;
	}
	
	public boolean enableComments(Apartment apartment) {
		return false;
	}
	
	public List<Apartment> sortNewest() throws JsonSyntaxException, IOException {
		ArrayList<Apartment> allApartments = (ArrayList<Apartment>) apartmentDao.getAll();
		ArrayList<Apartment> sortedList = new ArrayList<Apartment>();
		
		return null;
	}
	
	public List<Apartment> sortOldest() {
		return null;
	}
	
	public List<Apartment> sortCheapest() {
		return null;
	}
	
	public List<Apartment> sortMostExpensive() {
		return null;
	}
	
}
